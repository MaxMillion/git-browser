{"refs":{"refs/heads/master":"309b084b71bb267ed896f03de3ee74ebe848df8f","refs/tags/0.0.1":"ca48322725a9593df2cd9d2201841e21efde4e87","refs/tags/0.0.2":"f6f0eb679ce6ffc1dbca3accfb6566b6faba3f92","refs/tags/0.0.3":"0e659ab3d1a79be2490159dfc00688224b505df2","refs/tags/0.0.4":"fea7956949b6ba8cf64e39a76c9a291c07f80a47","refs/tags/0.0.5":"bdc79df551bdc6db108508d8443c446a340779a7","refs/tags/0.0.6":"0b777c5259d912c61f3b4961e062ab907ba45a8e","refs/tags/0.0.7":"db919a6b5ac7ad73a391a316d697749de030aa9a","refs/tags/0.0.8":"37ee9bbc881d0173fbafafe879b0f38673818ec8","refs/tags/0.0.9":"309b084b71bb267ed896f03de3ee74ebe848df8f"},"objects":{"309b084b71bb267ed896f03de3ee74ebe848df8f":{"type":"commit","body":{"tree":"4deff2c198e5665e639c50863f3c6ffe1f0da413","parents":["37ee9bbc881d0173fbafafe879b0f38673818ec8"],"author":"Tim Caswell <tim@creationix.com> 1377791993 -0500","committer":"Tim Caswell <tim@creationix.com> 1377791993 -0500","message":"Show custom object types\n"}},"37ee9bbc881d0173fbafafe879b0f38673818ec8":{"type":"commit","body":{"tree":"3a2b4086795c13d73b0bb3332d220f87f45c9f6c","parents":["db919a6b5ac7ad73a391a316d697749de030aa9a"],"author":"Tim Caswell <tim@creationix.com> 1377760694 -0500","committer":"Tim Caswell <tim@creationix.com> 1377760694 -0500","message":"Show inherited properties\n"}},"db919a6b5ac7ad73a391a316d697749de030aa9a":{"type":"commit","body":{"tree":"bf4d140d4ddf152d73bd678d5751178d94eb2e82","parents":["0b777c5259d912c61f3b4961e062ab907ba45a8e"],"author":"Tim Caswell <tim@creationix.com> 1371168236 -0500","committer":"Tim Caswell <tim@creationix.com> 1371168236 -0500","message":"Add repo link and bump version to 0.0.7\n"}},"0b777c5259d912c61f3b4961e062ab907ba45a8e":{"type":"commit","body":{"tree":"72e69e245d628da21a9841c03303b52b20a0a99d","parents":["bdc79df551bdc6db108508d8443c446a340779a7"],"author":"Tim Caswell <tim@creationix.com> 1369373544 -0500","committer":"Tim Caswell <tim@creationix.com> 1369373544 -0500","message":"Minor cleanup\n"}},"bdc79df551bdc6db108508d8443c446a340779a7":{"type":"commit","body":{"tree":"d9f22fee067085eeb166ceb0245a2e5cc1b3aec6","parents":["fea7956949b6ba8cf64e39a76c9a291c07f80a47"],"author":"Tim Caswell <tim@creationix.com> 1369193665 -0500","committer":"Tim Caswell <tim@creationix.com> 1369193665 -0500","message":"Improve string rendering\n"}},"fea7956949b6ba8cf64e39a76c9a291c07f80a47":{"type":"commit","body":{"tree":"a6c51164e4e31cbf81c2c04c7ebdf3db632df916","parents":["0e659ab3d1a79be2490159dfc00688224b505df2"],"author":"Tim Caswell <tim@creationix.com> 1369188509 -0500","committer":"Tim Caswell <tim@creationix.com> 1369188509 -0500","message":"Implement binary logger and tag as 0.0.4\n"}},"0e659ab3d1a79be2490159dfc00688224b505df2":{"type":"commit","body":{"tree":"92e6e81d2b0d6732babd4e3007313b3c07552ca0","parents":["f6f0eb679ce6ffc1dbca3accfb6566b6faba3f92"],"author":"Tim Caswell <tim@creationix.com> 1369178420 -0500","committer":"Tim Caswell <tim@creationix.com> 1369178420 -0500","message":"Add error logging\n"}},"f6f0eb679ce6ffc1dbca3accfb6566b6faba3f92":{"type":"commit","body":{"tree":"a112a0a1eadb65f49b86aeb30ba7138c5bced5a0","parents":["ca48322725a9593df2cd9d2201841e21efde4e87"],"author":"Tim Caswell <tim@creationix.com> 1369173288 -0500","committer":"Tim Caswell <tim@creationix.com> 1369173288 -0500","message":"Update style and bump to 0.0.2\n"}},"ca48322725a9593df2cd9d2201841e21efde4e87":{"type":"commit","body":{"tree":"c8b4d7c7a8b0df019d8aa8479bbf6ba7a9b72af6","parents":["9ab00ef1ff6eb35e41d1ba6d456ec633025b5b14"],"author":"Tim Caswell <tim@creationix.com> 1369172002 -0500","committer":"Tim Caswell <tim@creationix.com> 1369172002 -0500","message":"Initial Commit\n"}},"9ab00ef1ff6eb35e41d1ba6d456ec633025b5b14":{"type":"commit","body":{"tree":"fd23232d66e18ea045f46aa3713a4a06ff4888d8","author":"Tim Caswell <tim@creationix.com> 1369171903 -0700","committer":"Tim Caswell <tim@creationix.com> 1369171903 -0700","message":"Initial commit\n"}},"4deff2c198e5665e639c50863f3c6ffe1f0da413":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"b4fe4cc2c730661e86f37d8c19eb832bef93f7cc"},{"mode":33188,"name":"package.json","hash":"f24722e9c83bbca55058fdca1a2cf00f097556a6"}]},"3a2b4086795c13d73b0bb3332d220f87f45c9f6c":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"69d7828f98fd82de43f4919529a7c91b353d5d2d"},{"mode":33188,"name":"package.json","hash":"4768fa0a1fa50975412e4f0e3aa622b354eab596"}]},"72e69e245d628da21a9841c03303b52b20a0a99d":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"d8945fd20b86f4ac4717c1f476b007f55fd228c9"},{"mode":33188,"name":"package.json","hash":"09ba8f7d00ba06c336e3a87a4b848dc64d33804b"}]},"d9f22fee067085eeb166ceb0245a2e5cc1b3aec6":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"e70ae812af9c5c93be2911c4112b52dc2df2b8b0"},{"mode":33188,"name":"package.json","hash":"8a3b55c8067590ade2667b6d95e6af87dd30db9d"}]},"a6c51164e4e31cbf81c2c04c7ebdf3db632df916":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"c47c6fa58c77191c5886649531a8db1f77c4534d"},{"mode":33188,"name":"package.json","hash":"b09d1d795997a5e7808d5c1de76cc4ac599e7cba"}]},"92e6e81d2b0d6732babd4e3007313b3c07552ca0":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"34dc5c5a5f387ea6a77d5021ccdee17d7fe32916"},{"mode":33188,"name":"package.json","hash":"ffc0322e20b2302f2b67c214f29d74f21e378f71"}]},"a112a0a1eadb65f49b86aeb30ba7138c5bced5a0":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"65600abd74adf57ec345eb41e6aefb9930e1ba1f"},{"mode":33188,"name":"package.json","hash":"9fefbd85fbffc874846f4d5c6fc875b46e718d3d"}]},"c8b4d7c7a8b0df019d8aa8479bbf6ba7a9b72af6":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"5a782d5c837350f30355fda7e219d07a03d90087"},{"mode":33188,"name":"package.json","hash":"398a10d9fadea096f761fbe930920d2c32fa2af0"}]},"fd23232d66e18ea045f46aa3713a4a06ff4888d8":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"}]},"80c1a291b917f3dbd573f136b50c8ea891544c2e":{"type":"blob","body":"domlog\n======\n\nA simple on-screen logger using dombuilder to create elements.\n"},"69d7828f98fd82de43f4919529a7c91b353d5d2d":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%;-webkit-user-select:text;}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .binary{color:#88e}\\n\" +\n  \".log .binary:after{content:'>'}\\n\" +\n  \".log .binary:before{content:'<'}\\n\" +\n  \".log .binary:before,.log .binary:after{font-weight:bold;color:#bcf}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .hidden{opacity:0.5}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction keys(obj) {\n  var data = [];\n  for (var key in obj) {\n    data.push(key);\n  }\n  return data;\n}\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  if (val instanceof Uint8Array) {\n    var str = val.length.toString(16) + \":\";\n    for (var i = 0, l = Math.min(val.length, 25); i < l; i++) {\n      var c = val[i];\n      if (c < 0x10) str += \"0\" + c.toString(16);\n      else str += c.toString(16);\n    }\n    if (i < val.length) str += \"...\";\n    return [\".binary\", str];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      keys(val).map(function (key) {\n        return [\n          [\"dt\", {class: val.hasOwnProperty(key) ? \"key\" : \"key hidden\" }, key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  if (type === \"string\") {\n    val = JSON.stringify(val);\n    val = val.substr(1, val.length - 2);\n    return [\"span.string\", val];\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val, i) {\n  if (!i && typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"4768fa0a1fa50975412e4f0e3aa622b354eab596":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.8\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/creationix/domlog.git\"\n  }\n}\n"},"bf4d140d4ddf152d73bd678d5751178d94eb2e82":{"type":"tree","body":[{"mode":33188,"name":"README.md","hash":"80c1a291b917f3dbd573f136b50c8ea891544c2e"},{"mode":33188,"name":"log.js","hash":"d8945fd20b86f4ac4717c1f476b007f55fd228c9"},{"mode":33188,"name":"package.json","hash":"392369770e5435b42d4c355ae971e321b645827c"}]},"398a10d9fadea096f761fbe930920d2c32fa2af0":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.1\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"license\": \"MIT\"\n}\n"},"9fefbd85fbffc874846f4d5c6fc875b46e718d3d":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.2\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\"\n}\n"},"ffc0322e20b2302f2b67c214f29d74f21e378f71":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.3\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\"\n}\n"},"b09d1d795997a5e7808d5c1de76cc4ac599e7cba":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.4\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\"\n}\n"},"8a3b55c8067590ade2667b6d95e6af87dd30db9d":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.5\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\"\n}\n"},"09ba8f7d00ba06c336e3a87a4b848dc64d33804b":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.6\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\"\n}\n"},"392369770e5435b42d4c355ae971e321b645827c":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.7\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/creationix/domlog.git\"\n  }\n}\n"},"f24722e9c83bbca55058fdca1a2cf00f097556a6":{"type":"blob","body":"{\n  \"name\": \"domlog\",\n  \"description\": \"A simple on-screen logger using dombuilder to create elements.\",\n  \"version\": \"0.0.9\",\n  \"author\": \"Tim Caswell <tim@creationix.com>\",\n  \"main\": \"log.js\",\n  \"dependencies\": {\n    \"dombuilder\": \"~0.1.2\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/creationix/domlog.git\"\n  }\n}\n"},"d8945fd20b86f4ac4717c1f476b007f55fd228c9":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%;-webkit-user-select:text;}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .binary{color:#88e}\\n\" +\n  \".log .binary:after{content:'>'}\\n\" +\n  \".log .binary:before{content:'<'}\\n\" +\n  \".log .binary:before,.log .binary:after{font-weight:bold;color:#bcf}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  if (val instanceof Uint8Array) {\n    var str = val.length.toString(16) + \":\";\n    for (var i = 0, l = Math.min(val.length, 25); i < l; i++) {\n      var c = val[i];\n      if (c < 0x10) str += \"0\" + c.toString(16);\n      else str += c.toString(16);\n    }\n    if (i < val.length) str += \"...\";\n    return [\".binary\", str];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  if (type === \"string\") {\n    val = JSON.stringify(val);\n    val = val.substr(1, val.length - 2);\n    return [\"span.string\", val];\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val, i) {\n  if (!i && typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"b4fe4cc2c730661e86f37d8c19eb832bef93f7cc":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%;-webkit-user-select:text;}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .binary{color:#88e}\\n\" +\n  \".log .binary:after{content:'>'}\\n\" +\n  \".log .binary:before{content:'<'}\\n\" +\n  \".log .binary:before,.log .binary:after{font-weight:bold;color:#bcf}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .hidden{opacity:0.5}\\n\" +\n  \".log .obj-name{font-style:italic}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction keys(obj) {\n  var data = [];\n  for (var key in obj) {\n    data.push(key);\n  }\n  return data;\n}\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  if (val instanceof Uint8Array) {\n    var str = val.length.toString(16) + \":\";\n    for (var i = 0, l = Math.min(val.length, 25); i < l; i++) {\n      var c = val[i];\n      if (c < 0x10) str += \"0\" + c.toString(16);\n      else str += c.toString(16);\n    }\n    if (i < val.length) str += \"...\";\n    return [\".binary\", str];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    var name = Object.prototype.toString.call(val);\n    name = name.substr(8, name.length - 9);\n    var obj = [\"dl.object\"].concat(\n      keys(val).map(function (key) {\n        return [\n          [\"dt\", {class: val.hasOwnProperty(key) ? \"key\" : \"key hidden\" }, key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n    if (name === \"Object\") return obj;\n    return [[\"span.obj-name\", name], obj];\n  }\n  if (type === \"string\") {\n    val = JSON.stringify(val);\n    val = val.substr(1, val.length - 2);\n    return [\"span.string\", val];\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val, i) {\n  if (!i && typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"e70ae812af9c5c93be2911c4112b52dc2df2b8b0":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .binary{color:#88e}\\n\" +\n  \".log .binary:after{content:'>'}\\n\" +\n  \".log .binary:before{content:'<'}\\n\" +\n  \".log .binary:before,.log .binary:after{font-weight:bold;color:#bcf}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  if (val instanceof Uint8Array) {\n    var str = val.length.toString(16) + \":\";\n    for (var i = 0, l = Math.min(val.length, 25); i < l; i++) {\n      var c = val[i];\n      if (c < 0x10) str += \"0\" + c.toString(16);\n      else str += c.toString(16);\n    }\n    if (i < val.length) str += \"...\";\n    return [\".binary\", str];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  if (type === \"string\") {\n    val = JSON.stringify(val);\n    val = val.substr(1, val.length - 2);\n    return [\"span.string\", val];\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val) {\n  if (typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"5a782d5c837350f30355fda7e219d07a03d90087":{"type":"blob","body":"var domBuilder = require('dombuilder');\n\nexports.toDom = toDom;\nexports.container = undefined;\nexports.setup = setup;\nexports.log = log;\nexports.css =\n  \".log{background:#222;color:#ddd;font-family:monospace;padding:0}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup() {\n  var style = document.createElement(\"style\");\n  style.textContent = exports.css;\n  document.head.appendChild(style);\n  exports.container = domBuilder([\"ul.log\"]);\n  document.body.appendChild(exports.container);\n}\n\nfunction item(val) {\n  if (typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!exports.container) setup();\n  exports.container.appendChild(domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item))));\n}\n"},"65600abd74adf57ec345eb41e6aefb9930e1ba1f":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup() {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  document.body.appendChild(log.container);\n}\n\nfunction item(val) {\n  if (typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"34dc5c5a5f387ea6a77d5021ccdee17d7fe32916":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val) {\n  if (typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"},"c47c6fa58c77191c5886649531a8db1f77c4534d":{"type":"blob","body":"\"use strict\";\n\nvar domBuilder = require('dombuilder');\n\nmodule.exports = log;\nlog.toDom = toDom;\nlog.container = undefined;\nlog.setup = setup;\nlog.css =\n  \".log:hover{background:rgba(0,0,0,1);height:100%}\\n\" +\n  \".log{background:rgba(0,0,0,0.7);color:#ddd;font-family:monospace;padding:0;position:absolute;left:0;right:0;bottom:0;margin:0;height:200px;overflow:auto;transition:all 1s ease-in-out}\\n\" +\n  \".log .array:after{content:']'}\\n\" +\n  \".log .array:before{content:'['}\\n\" +\n  \".log .binary{color:#88e}\\n\" +\n  \".log .binary:after{content:'>'}\\n\" +\n  \".log .binary:before{content:'<'}\\n\" +\n  \".log .binary:before,.log .binary:after{font-weight:bold;color:#bcf}\\n\" +\n  \".log .boolean{color:#f4a}\\n\" +\n  \".log .error{color:#f33;white-space:pre-wrap}\\n\" +\n  \".log .function{color:#fb0}\\n\" +\n  \".log .null{color:#aaa;font-weight:bold}\\n\" +\n  \".log .number{color:#5cf}\\n\" +\n  \".log .object .key:after{content:':';font-weight:bold}\\n\" +\n  \".log .object:after{content:'}'}\\n\" +\n  \".log .object:before{content:'{'}\\n\" +\n  \".log .string{color:#4e2}\\n\" +\n  \".log .string:after{content:'\\\\201D'}\\n\" +\n  \".log .string:before{content:'\\\\201C'}\\n\" +\n  \".log .string:before,.log .string:after{color:#5f3;font-weight:bold}\\n\" +\n  \".log .text{color:#fff}\\n\" +\n  \".log .undefined{color:#aaa}\\n\" +\n  \".log > li{padding:5px}\\n\" +\n  \".log > li *{display:inline-block;margin:0 3px;padding:0}\\n\";\n\nfunction toDom(val) {\n  if (val === null) {\n    return [\"span.null\", \"null\"];\n  }\n  if (Array.isArray(val)) {\n    return [\"ul.array\"].concat(\n      val.map(function (item) {\n        return [\"li\", toDom(item)];\n      })\n    );\n  }\n  if (val instanceof Error) {\n    return [\".error\", val.stack];\n  }\n  if (val instanceof Uint8Array) {\n    var str = val.length.toString(16) + \":\";\n    for (var i = 0, l = Math.min(val.length, 25); i < l; i++) {\n      var c = val[i];\n      if (c < 0x10) str += \"0\" + c.toString(16);\n      else str += c.toString(16);\n    }\n    if (i < val.length) str += \"...\";\n    return [\".binary\", str];\n  }\n  var type = typeof val;\n  if (type === \"object\") {\n    return [\"dl.object\"].concat(\n      Object.keys(val).map(function (key) {\n        return [\n          [\"dt.key\", key],\n          [\"dd\", toDom(val[key])]\n        ];\n      })\n    );\n  }\n  var title = \"\" + val;\n  val = title.split(\"\\n\");\n  if (val.length > 1) {\n    val = val[0] + \" ... \" + val[val.length - 1];\n  }\n  else {\n    val = val[0];\n  }\n  return [\"span\", {title: title, class: type}, document.createTextNode(val)];\n}\n\nfunction setup(extra) {\n  var style = document.createElement(\"style\");\n  style.textContent = log.css;\n  document.head.appendChild(style);\n  log.container = domBuilder([\"ul.log\"]);\n  if (extra) {\n    for (var key in extra) {\n      log.container.style[key] = extra[key];\n    }\n  }\n  document.body.appendChild(log.container);\n}\n\nfunction item(val) {\n  if (typeof val === \"string\") return [\"span.text\", val];\n  return toDom(val);\n}\n\nfunction log() {\n  if (!log.container) setup();\n  var child = domBuilder([\"li\"].concat(Array.prototype.map.call(arguments, item)));\n  log.container.appendChild(child);\n  log.container.scrollTop = child.offsetTop;\n}\n"}}}